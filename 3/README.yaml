# Copyright (c) 2017, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of Google Inc. nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL Google Inc. BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Used with http://github.com/GoogleCloudPlatform/runtimes-common/tree/master/docgen
_templates:
- &Image launcher.gcr.io/google/redis3
- &PullCommand gcloud docker -- pull launcher.gcr.io/google/redis3
- &ServiceArgs
  name: redis
  image: *Image
- &BaseServerRun
  <<: *ServiceArgs
  exposedPorts:
  - port: 6379
- &BaseClientRun
  name: redis
  image: *Image
  runType: INTERACTIVE_SHELL
- &BaseExec
  execType: INTERACTIVE_SHELL

overview:
  description: |-
    This image contains an installation Redis 3.2.
    
    For more information, see the [Official Image Launcher Page](https://console.cloud.google.com/launcher/details/google/redis3).
  dockerfileUrl: https://github.com/GoogleCloudPlatform/redis-docker/tree/master/3.2.8
  pullCommand: *PullCommand

taskGroups:
- title: Running Redis
  tasks:
  - title: Start a Redis Instance
    runtimes: [DOCKER, KUBERNETES]
    instructions:
    - run:
        <<: *BaseServerRun
- title: Redis CLI
  description: Now that it's deployed you can connect to the container.
  tasks:
  - title: Connect to a running Redis container
    runtimes: [DOCKER, KUBERNETES]
    instructions:
    - exec:
        <<: *BaseExec
        containerName: some-redis
        command: redis-cli
        subcommands:
        - description: To test if redis is working we create a key called MY_TEST_KEY. Run the following command to set a test key.
          command: SET MY_TEST_KEY pass
        - description: Run the following command to verify that the set command above succeeded. This should print out "pass".
          command: GET MY_TEST_KEY
- title: Adding persistence
  description: |-
    Redis is a in memory database, but does write data to disk periodically. The location of this dump file can be found at `/data/dump.rdb`.

    The container is built with a default VOLUME of `/data`. The data will survive a reboot but if the container is moved then the data will be lost.

    You can find more about redis persistence on the [redis website](https://redis.io/topics/persistence).

  tasks:
  - title: Use a persistent data volume
    runtimes: [DOCKER, KUBERNETES]
    instructions:
    - run:
        <<: *BaseServerRun
        volumes:
        - name: redisdata
          path: /data
          emptyPersistentVolume:
            hostPath: /path/to/your/redis/data/directory
            subPath: redisdata
- title: Configurations
  anchorId: configurations
  tasks:
  - title: Using configuration volume
    runtimes: [DOCKER, KUBERNETES]
    instructions:
    - description: |-
        You can start redis with a configuration file to customize or tweak how the cluster will run. This file is commonly named `redis.conf`. We start redis with the configuration file as an argument.

        Assume /path/to/your/redis/config is the local directory on your machine, we can get the configuration file into the container with the options below.
      run:
        <<: *BaseServerRun
        arguments: ["/etc/redis/redis.conf"]
        volumes:
        - name: redisconfig
          path: /etc/redis/
          singleFile:
            hostFile: /path/to/your/redis/config/redis.conf
    - description: >-
        See [Volume reference](#references-volumes) for more details.


portReference:
  ports:
  - port: '6379'
    description: Redis port

volumeReference:
  volumes:
  - path: /etc/redis/redis.conf
    description: Location to the mounted configmap to configure redis
  - path: /data
    description: Location where redis will stores the rdb data
